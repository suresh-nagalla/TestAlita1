using RestSharp;\\nusing Newtonsoft.Json;\\nusing Serilog;\\n\\nnamespace AutomationFramework.API.BusinessLogic\\n{\\n    public class PetApiHelper\\n    {\\n        private readonly RestClient _client;\\n\\n        public PetApiHelper()\\n        {\\n            _client = new RestClient("https://petstore.swagger.io/v2");\\n            Log.Information("RestClient initialized with base URL: {BaseUrl}", _client.BaseUrl);\\n        }\\n\\n        public RestResponse SendPostRequest(string endpoint, object body)\\n        {\\n            var request = new RestRequest(endpoint, Method.Post);\\n            request.AddHeader("Content-Type", "application/json");\\n            request.AddJsonBody(body);\\n\\n            Log.Information("Sending POST request to: {Endpoint} with body: {RequestBody}", endpoint, JsonConvert.SerializeObject(body));\\n            var response = _client.Execute(request);\\n\\n            Log.Information("Received response: {StatusCode}", response.StatusCode);\\n            return response;\\n        }\\n\\n        public RestResponse SendGetRequest(string endpoint)\\n        {\\n            var request = new RestRequest(endpoint, Method.Get);\\n            Log.Information("Sending GET request to: {Endpoint}", endpoint);\\n\\n            var response = _client.Execute(request);\\n            Log.Information("Received response: {StatusCode}", response.StatusCode);\\n            return response;\\n        }\\n\\n        public RestResponse SendPutRequest(string endpoint, object body)\\n        {\\n            var request = new RestRequest(endpoint, Method.Put);\\n            request.AddHeader("Content-Type", "application/json");\\n            request.AddJsonBody(body);\\n\\n            Log.Information("Sending PUT request to: {Endpoint} with body: {RequestBody}", endpoint, JsonConvert.SerializeObject(body));\\n            var response = _client.Execute(request);\\n\\n            Log.Information("Received response: {StatusCode}", response.StatusCode);\\n            return response;\\n        }\\n\\n        public RestResponse SendDeleteRequest(string endpoint)\\n        {\\n            var request = new RestRequest(endpoint, Method.Delete);\\n            Log.Information("Sending DELETE request to: {Endpoint}", endpoint);\\n\\n            var response = _client.Execute(request);\\n            Log.Information("Received response: {StatusCode}", response.StatusCode);\\n            return response;\\n        }\\n    }\\n}